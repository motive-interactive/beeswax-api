// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: beeswax/openrtbmini/openrtb_common.proto

package openrtbmini

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Enums_BidRequest_User_UserIdType int32

const (
	Enums_BidRequest_User_UNKNOWN         Enums_BidRequest_User_UserIdType = -1
	Enums_BidRequest_User_BEESWAX         Enums_BidRequest_User_UserIdType = 0
	Enums_BidRequest_User_CUSTOMER        Enums_BidRequest_User_UserIdType = 1
	Enums_BidRequest_User_IDFA            Enums_BidRequest_User_UserIdType = 2
	Enums_BidRequest_User_IDFA_MD5        Enums_BidRequest_User_UserIdType = 3
	Enums_BidRequest_User_IDFA_SHA1       Enums_BidRequest_User_UserIdType = 4
	Enums_BidRequest_User_AD_ID           Enums_BidRequest_User_UserIdType = 5
	Enums_BidRequest_User_AD_ID_MD5       Enums_BidRequest_User_UserIdType = 6
	Enums_BidRequest_User_AD_ID_SHA1      Enums_BidRequest_User_UserIdType = 7
	Enums_BidRequest_User_OTHER_MOBILE_ID Enums_BidRequest_User_UserIdType = 8
	// The request will be processed in the same way as other
	// mobile ids. (Prefix with `mid.` and do frequency cap, user_data augmentation, etc)
	Enums_BidRequest_User_IP_ADDRESS Enums_BidRequest_User_UserIdType = 9
)

var Enums_BidRequest_User_UserIdType_name = map[int32]string{
	-1: "UNKNOWN",
	0:  "BEESWAX",
	1:  "CUSTOMER",
	2:  "IDFA",
	3:  "IDFA_MD5",
	4:  "IDFA_SHA1",
	5:  "AD_ID",
	6:  "AD_ID_MD5",
	7:  "AD_ID_SHA1",
	8:  "OTHER_MOBILE_ID",
	9:  "IP_ADDRESS",
}
var Enums_BidRequest_User_UserIdType_value = map[string]int32{
	"UNKNOWN":         -1,
	"BEESWAX":         0,
	"CUSTOMER":        1,
	"IDFA":            2,
	"IDFA_MD5":        3,
	"IDFA_SHA1":       4,
	"AD_ID":           5,
	"AD_ID_MD5":       6,
	"AD_ID_SHA1":      7,
	"OTHER_MOBILE_ID": 8,
	"IP_ADDRESS":      9,
}

func (x Enums_BidRequest_User_UserIdType) Enum() *Enums_BidRequest_User_UserIdType {
	p := new(Enums_BidRequest_User_UserIdType)
	*p = x
	return p
}
func (x Enums_BidRequest_User_UserIdType) String() string {
	return proto.EnumName(Enums_BidRequest_User_UserIdType_name, int32(x))
}
func (x *Enums_BidRequest_User_UserIdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Enums_BidRequest_User_UserIdType_value, data, "Enums_BidRequest_User_UserIdType")
	if err != nil {
		return err
	}
	*x = Enums_BidRequest_User_UserIdType(value)
	return nil
}
func (Enums_BidRequest_User_UserIdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_openrtb_common_28928a5b25e25524, []int{0, 0, 0, 0}
}

type Enums struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Enums) Reset()         { *m = Enums{} }
func (m *Enums) String() string { return proto.CompactTextString(m) }
func (*Enums) ProtoMessage()    {}
func (*Enums) Descriptor() ([]byte, []int) {
	return fileDescriptor_openrtb_common_28928a5b25e25524, []int{0}
}
func (m *Enums) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Enums) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Enums.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Enums) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enums.Merge(dst, src)
}
func (m *Enums) XXX_Size() int {
	return m.Size()
}
func (m *Enums) XXX_DiscardUnknown() {
	xxx_messageInfo_Enums.DiscardUnknown(m)
}

var xxx_messageInfo_Enums proto.InternalMessageInfo

type Enums_BidRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Enums_BidRequest) Reset()         { *m = Enums_BidRequest{} }
func (m *Enums_BidRequest) String() string { return proto.CompactTextString(m) }
func (*Enums_BidRequest) ProtoMessage()    {}
func (*Enums_BidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_openrtb_common_28928a5b25e25524, []int{0, 0}
}
func (m *Enums_BidRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Enums_BidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Enums_BidRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Enums_BidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enums_BidRequest.Merge(dst, src)
}
func (m *Enums_BidRequest) XXX_Size() int {
	return m.Size()
}
func (m *Enums_BidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Enums_BidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Enums_BidRequest proto.InternalMessageInfo

type Enums_BidRequest_User struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Enums_BidRequest_User) Reset()         { *m = Enums_BidRequest_User{} }
func (m *Enums_BidRequest_User) String() string { return proto.CompactTextString(m) }
func (*Enums_BidRequest_User) ProtoMessage()    {}
func (*Enums_BidRequest_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_openrtb_common_28928a5b25e25524, []int{0, 0, 0}
}
func (m *Enums_BidRequest_User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Enums_BidRequest_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Enums_BidRequest_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Enums_BidRequest_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enums_BidRequest_User.Merge(dst, src)
}
func (m *Enums_BidRequest_User) XXX_Size() int {
	return m.Size()
}
func (m *Enums_BidRequest_User) XXX_DiscardUnknown() {
	xxx_messageInfo_Enums_BidRequest_User.DiscardUnknown(m)
}

var xxx_messageInfo_Enums_BidRequest_User proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Enums)(nil), "openrtbmini.Enums")
	proto.RegisterType((*Enums_BidRequest)(nil), "openrtbmini.Enums.BidRequest")
	proto.RegisterType((*Enums_BidRequest_User)(nil), "openrtbmini.Enums.BidRequest.User")
	proto.RegisterEnum("openrtbmini.Enums_BidRequest_User_UserIdType", Enums_BidRequest_User_UserIdType_name, Enums_BidRequest_User_UserIdType_value)
}
func (m *Enums) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Enums) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Enums_BidRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Enums_BidRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Enums_BidRequest_User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Enums_BidRequest_User) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintOpenrtbCommon(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Enums) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Enums_BidRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Enums_BidRequest_User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovOpenrtbCommon(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozOpenrtbCommon(x uint64) (n int) {
	return sovOpenrtbCommon(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Enums) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOpenrtbCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Enums: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Enums: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOpenrtbCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOpenrtbCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Enums_BidRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOpenrtbCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BidRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BidRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOpenrtbCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOpenrtbCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Enums_BidRequest_User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOpenrtbCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOpenrtbCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOpenrtbCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOpenrtbCommon(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOpenrtbCommon
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOpenrtbCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOpenrtbCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthOpenrtbCommon
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowOpenrtbCommon
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipOpenrtbCommon(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthOpenrtbCommon = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOpenrtbCommon   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("beeswax/openrtbmini/openrtb_common.proto", fileDescriptor_openrtb_common_28928a5b25e25524)
}

var fileDescriptor_openrtb_common_28928a5b25e25524 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x48, 0x4a, 0x4d, 0x2d,
	0x2e, 0x4f, 0xac, 0xd0, 0xcf, 0x2f, 0x48, 0xcd, 0x2b, 0x2a, 0x49, 0xca, 0xcd, 0xcc, 0xcb, 0x84,
	0xb1, 0xe3, 0x93, 0xf3, 0x73, 0x73, 0xf3, 0xf3, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xb8,
	0x91, 0x54, 0x28, 0x5d, 0x65, 0xe4, 0x62, 0x75, 0xcd, 0x2b, 0xcd, 0x2d, 0x96, 0x3a, 0xcd, 0xc8,
	0xc5, 0xe5, 0x94, 0x99, 0x12, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0xb5, 0x87, 0x91, 0x8b,
	0x25, 0xb4, 0x38, 0xb5, 0x48, 0x69, 0x33, 0x23, 0x17, 0x17, 0x88, 0xe1, 0x99, 0x12, 0x52, 0x59,
	0x90, 0x2a, 0x24, 0xc2, 0xc5, 0x1e, 0xea, 0xe7, 0xed, 0xe7, 0x1f, 0xee, 0x27, 0xf0, 0x1f, 0x06,
	0x18, 0x85, 0xb8, 0xb9, 0xd8, 0x9d, 0x5c, 0x5d, 0x83, 0xc3, 0x1d, 0x23, 0x04, 0x18, 0x84, 0x78,
	0xb8, 0x38, 0x9c, 0x43, 0x83, 0x43, 0xfc, 0x7d, 0x5d, 0x83, 0x04, 0x18, 0x85, 0x38, 0xb8, 0x58,
	0x3c, 0x5d, 0xdc, 0x1c, 0x05, 0x98, 0x40, 0xe2, 0x20, 0x56, 0xbc, 0xaf, 0x8b, 0xa9, 0x00, 0xb3,
	0x10, 0x2f, 0x17, 0x27, 0x98, 0x17, 0xec, 0xe1, 0x68, 0x28, 0xc0, 0x22, 0xc4, 0xc9, 0xc5, 0xea,
	0xe8, 0x12, 0xef, 0xe9, 0x22, 0xc0, 0x0a, 0x92, 0x01, 0x33, 0xc1, 0x0a, 0xd9, 0x84, 0xf8, 0xb8,
	0xb8, 0x20, 0x5c, 0xb0, 0x4a, 0x76, 0x21, 0x61, 0x2e, 0x7e, 0xff, 0x10, 0x0f, 0xd7, 0xa0, 0x78,
	0x5f, 0x7f, 0x27, 0x4f, 0x1f, 0x57, 0x90, 0x1e, 0x0e, 0x90, 0x22, 0xcf, 0x80, 0x78, 0x47, 0x17,
	0x97, 0x20, 0xd7, 0xe0, 0x60, 0x01, 0x4e, 0x27, 0xd5, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92,
	0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x91, 0x4b, 0x3c, 0x39, 0x3f, 0x57, 0x0f, 0x1a, 0x40, 0x7a, 0x48,
	0xde, 0x07, 0x04, 0x00, 0x00, 0xff, 0xff, 0x84, 0xa7, 0x34, 0x9f, 0x36, 0x01, 0x00, 0x00,
}
