// Copyright 2018, Beeswax.IO Inc.
//
// Currency related information

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: beeswax/currency/currency.proto

package currency

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Currency_Code int32

const (
	Currency_UNKNOWN Currency_Code = 0
	Currency_USD     Currency_Code = 1 // US Dollar
	Currency_EUR     Currency_Code = 2 // Euro
	Currency_GBP     Currency_Code = 3 // Pound Sterling
	Currency_CAD     Currency_Code = 4 // Canadian Dollar
	Currency_CHF     Currency_Code = 5 // Swiss Franc
	Currency_UAH     Currency_Code = 6 // Ukrainian hryvnia
	Currency_JPY     Currency_Code = 7 // Japanese Yen
)

// Enum value maps for Currency_Code.
var (
	Currency_Code_name = map[int32]string{
		0: "UNKNOWN",
		1: "USD",
		2: "EUR",
		3: "GBP",
		4: "CAD",
		5: "CHF",
		6: "UAH",
		7: "JPY",
	}
	Currency_Code_value = map[string]int32{
		"UNKNOWN": 0,
		"USD":     1,
		"EUR":     2,
		"GBP":     3,
		"CAD":     4,
		"CHF":     5,
		"UAH":     6,
		"JPY":     7,
	}
)

func (x Currency_Code) Enum() *Currency_Code {
	p := new(Currency_Code)
	*p = x
	return p
}

func (x Currency_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_beeswax_currency_currency_proto_enumTypes[0].Descriptor()
}

func (Currency_Code) Type() protoreflect.EnumType {
	return &file_beeswax_currency_currency_proto_enumTypes[0]
}

func (x Currency_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency_Code.Descriptor instead.
func (Currency_Code) EnumDescriptor() ([]byte, []int) {
	return file_beeswax_currency_currency_proto_rawDescGZIP(), []int{0, 0}
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_currency_currency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_currency_currency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_beeswax_currency_currency_proto_rawDescGZIP(), []int{0}
}

// Next id: 3
type ExchangeRateUSD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode Currency_Code `protobuf:"varint,1,opt,name=currency_code,json=currencyCode,proto3,enum=currency.Currency_Code" json:"currency_code,omitempty"`
	Rate         float64       `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *ExchangeRateUSD) Reset() {
	*x = ExchangeRateUSD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_currency_currency_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRateUSD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateUSD) ProtoMessage() {}

func (x *ExchangeRateUSD) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_currency_currency_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateUSD.ProtoReflect.Descriptor instead.
func (*ExchangeRateUSD) Descriptor() ([]byte, []int) {
	return file_beeswax_currency_currency_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeRateUSD) GetCurrencyCode() Currency_Code {
	if x != nil {
		return x.CurrencyCode
	}
	return Currency_UNKNOWN
}

func (x *ExchangeRateUSD) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

// Next id: 2
type CurrencyExchangeRateUSDTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rates []*ExchangeRateUSD `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
}

func (x *CurrencyExchangeRateUSDTable) Reset() {
	*x = CurrencyExchangeRateUSDTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_currency_currency_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyExchangeRateUSDTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyExchangeRateUSDTable) ProtoMessage() {}

func (x *CurrencyExchangeRateUSDTable) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_currency_currency_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyExchangeRateUSDTable.ProtoReflect.Descriptor instead.
func (*CurrencyExchangeRateUSDTable) Descriptor() ([]byte, []int) {
	return file_beeswax_currency_currency_proto_rawDescGZIP(), []int{2}
}

func (x *CurrencyExchangeRateUSDTable) GetRates() []*ExchangeRateUSD {
	if x != nil {
		return x.Rates
	}
	return nil
}

// Next id: 3
// CurrencyAmount represents an amount of money in a local currency (micros).
type CurrencyAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// how much money
	Micros int64 `protobuf:"varint,1,opt,name=micros,proto3" json:"micros,omitempty"`
	// in what unit
	Currency Currency_Code `protobuf:"varint,2,opt,name=currency,proto3,enum=currency.Currency_Code" json:"currency,omitempty"`
}

func (x *CurrencyAmount) Reset() {
	*x = CurrencyAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_currency_currency_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyAmount) ProtoMessage() {}

func (x *CurrencyAmount) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_currency_currency_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyAmount.ProtoReflect.Descriptor instead.
func (*CurrencyAmount) Descriptor() ([]byte, []int) {
	return file_beeswax_currency_currency_proto_rawDescGZIP(), []int{3}
}

func (x *CurrencyAmount) GetMicros() int64 {
	if x != nil {
		return x.Micros
	}
	return 0
}

func (x *CurrencyAmount) GetCurrency() Currency_Code {
	if x != nil {
		return x.Currency
	}
	return Currency_UNKNOWN
}

// Next id: 3
// CurrencyTransaction represents an amount of
// currency at a particular exchange rate.
type CurrencyTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// how much money
	Amount *CurrencyAmount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// exchange rate in effect at time of transaction
	Rate float64 `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *CurrencyTransaction) Reset() {
	*x = CurrencyTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_currency_currency_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyTransaction) ProtoMessage() {}

func (x *CurrencyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_currency_currency_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyTransaction.ProtoReflect.Descriptor instead.
func (*CurrencyTransaction) Descriptor() ([]byte, []int) {
	return file_beeswax_currency_currency_proto_rawDescGZIP(), []int{4}
}

func (x *CurrencyTransaction) GetAmount() *CurrencyAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *CurrencyTransaction) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

var File_beeswax_currency_currency_proto protoreflect.FileDescriptor

var file_beeswax_currency_currency_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x5e, 0x0a, 0x08, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x52, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x55, 0x53, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x55, 0x52, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x42, 0x50, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x44, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x46, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x41, 0x48,
	0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x50, 0x59, 0x10, 0x07, 0x22, 0x63, 0x0a, 0x0f, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x55, 0x53, 0x44, 0x12, 0x3c,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x22, 0x4f, 0x0a, 0x1c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x55, 0x53, 0x44, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x55, 0x53, 0x44, 0x52, 0x05, 0x72, 0x61, 0x74, 0x65,
	0x73, 0x22, 0x5d, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x22, 0x5b, 0x0a, 0x13, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beeswax_currency_currency_proto_rawDescOnce sync.Once
	file_beeswax_currency_currency_proto_rawDescData = file_beeswax_currency_currency_proto_rawDesc
)

func file_beeswax_currency_currency_proto_rawDescGZIP() []byte {
	file_beeswax_currency_currency_proto_rawDescOnce.Do(func() {
		file_beeswax_currency_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_beeswax_currency_currency_proto_rawDescData)
	})
	return file_beeswax_currency_currency_proto_rawDescData
}

var file_beeswax_currency_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_beeswax_currency_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_beeswax_currency_currency_proto_goTypes = []interface{}{
	(Currency_Code)(0),                   // 0: currency.Currency.Code
	(*Currency)(nil),                     // 1: currency.Currency
	(*ExchangeRateUSD)(nil),              // 2: currency.ExchangeRateUSD
	(*CurrencyExchangeRateUSDTable)(nil), // 3: currency.CurrencyExchangeRateUSDTable
	(*CurrencyAmount)(nil),               // 4: currency.CurrencyAmount
	(*CurrencyTransaction)(nil),          // 5: currency.CurrencyTransaction
}
var file_beeswax_currency_currency_proto_depIdxs = []int32{
	0, // 0: currency.ExchangeRateUSD.currency_code:type_name -> currency.Currency.Code
	2, // 1: currency.CurrencyExchangeRateUSDTable.rates:type_name -> currency.ExchangeRateUSD
	0, // 2: currency.CurrencyAmount.currency:type_name -> currency.Currency.Code
	4, // 3: currency.CurrencyTransaction.amount:type_name -> currency.CurrencyAmount
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_beeswax_currency_currency_proto_init() }
func file_beeswax_currency_currency_proto_init() {
	if File_beeswax_currency_currency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_beeswax_currency_currency_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_currency_currency_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRateUSD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_currency_currency_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyExchangeRateUSDTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_currency_currency_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_currency_currency_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beeswax_currency_currency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beeswax_currency_currency_proto_goTypes,
		DependencyIndexes: file_beeswax_currency_currency_proto_depIdxs,
		EnumInfos:         file_beeswax_currency_currency_proto_enumTypes,
		MessageInfos:      file_beeswax_currency_currency_proto_msgTypes,
	}.Build()
	File_beeswax_currency_currency_proto = out.File
	file_beeswax_currency_currency_proto_rawDesc = nil
	file_beeswax_currency_currency_proto_goTypes = nil
	file_beeswax_currency_currency_proto_depIdxs = nil
}
