// Copyright 2015, Beeswax.IO Inc.
//
// Beeswax bidder API.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: beeswax/bid/request.proto

package bid

import (
	proto "github.com/golang/protobuf/proto"
	adgroup "github.com/motive-interactive/beeswax-api/beeswax/adgroup"
	openrtb "github.com/motive-interactive/beeswax-api/beeswax/openrtb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Stinger will issue a HTTP request to the bid agent.
// The following message will be present in the body of the HTTP request.
type BidAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fully augmented bid request.
	BidRequest *openrtb.BidRequest `protobuf:"bytes,1,opt,name=bid_request,json=bidRequest" json:"bid_request,omitempty"`
	// Adcandidate is a wrapper around a line item and creatives.
	// Stinger determines all the adcandidates that are eligible to serve for
	// the given bid request.
	Adcandidates []*Adcandidate `protobuf:"bytes,2,rep,name=adcandidates" json:"adcandidates,omitempty"`
}

func (x *BidAgentRequest) Reset() {
	*x = BidAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_bid_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAgentRequest) ProtoMessage() {}

func (x *BidAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_bid_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAgentRequest.ProtoReflect.Descriptor instead.
func (*BidAgentRequest) Descriptor() ([]byte, []int) {
	return file_beeswax_bid_request_proto_rawDescGZIP(), []int{0}
}

func (x *BidAgentRequest) GetBidRequest() *openrtb.BidRequest {
	if x != nil {
		return x.BidRequest
	}
	return nil
}

func (x *BidAgentRequest) GetAdcandidates() []*Adcandidate {
	if x != nil {
		return x.Adcandidates
	}
	return nil
}

// Bid agent will respond to Stinger with a HTTP response.
// The following message will be present in the body of the HTTP response.
// BidAgent can choose not to bid at all in which case it must still
// respond to the HTTP request with a 204 status code.
type BidAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bids []*BidAgentResponse_Bid `protobuf:"bytes,1,rep,name=bids" json:"bids,omitempty"`
}

func (x *BidAgentResponse) Reset() {
	*x = BidAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_bid_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAgentResponse) ProtoMessage() {}

func (x *BidAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_bid_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAgentResponse.ProtoReflect.Descriptor instead.
func (*BidAgentResponse) Descriptor() ([]byte, []int) {
	return file_beeswax_bid_request_proto_rawDescGZIP(), []int{1}
}

func (x *BidAgentResponse) GetBids() []*BidAgentResponse_Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

// AgentParams are typed <key,value> pairs denoting some custom attributes
// of the Bid agent.
// These params are logged and are available via Bid logs.
// Some use cases of AgentParams:
// - If the bidding agent uses a machine learning model, some of its
//   attributes can be passed in via AgentParams.
// Next Id: 6
type BidAgentResponse_AgentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Types that are assignable to ValueOneof:
	//	*BidAgentResponse_AgentParams_StringValue
	//	*BidAgentResponse_AgentParams_IntValue
	//	*BidAgentResponse_AgentParams_DoubleValue
	//	*BidAgentResponse_AgentParams_BoolValue
	ValueOneof isBidAgentResponse_AgentParams_ValueOneof `protobuf_oneof:"value_oneof"`
}

func (x *BidAgentResponse_AgentParams) Reset() {
	*x = BidAgentResponse_AgentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_bid_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAgentResponse_AgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAgentResponse_AgentParams) ProtoMessage() {}

func (x *BidAgentResponse_AgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_bid_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAgentResponse_AgentParams.ProtoReflect.Descriptor instead.
func (*BidAgentResponse_AgentParams) Descriptor() ([]byte, []int) {
	return file_beeswax_bid_request_proto_rawDescGZIP(), []int{1, 0}
}

func (x *BidAgentResponse_AgentParams) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (m *BidAgentResponse_AgentParams) GetValueOneof() isBidAgentResponse_AgentParams_ValueOneof {
	if m != nil {
		return m.ValueOneof
	}
	return nil
}

func (x *BidAgentResponse_AgentParams) GetStringValue() string {
	if x, ok := x.GetValueOneof().(*BidAgentResponse_AgentParams_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *BidAgentResponse_AgentParams) GetIntValue() int32 {
	if x, ok := x.GetValueOneof().(*BidAgentResponse_AgentParams_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *BidAgentResponse_AgentParams) GetDoubleValue() float64 {
	if x, ok := x.GetValueOneof().(*BidAgentResponse_AgentParams_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (x *BidAgentResponse_AgentParams) GetBoolValue() bool {
	if x, ok := x.GetValueOneof().(*BidAgentResponse_AgentParams_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

type isBidAgentResponse_AgentParams_ValueOneof interface {
	isBidAgentResponse_AgentParams_ValueOneof()
}

type BidAgentResponse_AgentParams_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=string_value,json=stringValue,oneof"`
}

type BidAgentResponse_AgentParams_IntValue struct {
	IntValue int32 `protobuf:"varint,3,opt,name=int_value,json=intValue,oneof"`
}

type BidAgentResponse_AgentParams_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue,oneof"`
}

type BidAgentResponse_AgentParams_BoolValue struct {
	BoolValue bool `protobuf:"varint,5,opt,name=bool_value,json=boolValue,oneof"`
}

func (*BidAgentResponse_AgentParams_StringValue) isBidAgentResponse_AgentParams_ValueOneof() {}

func (*BidAgentResponse_AgentParams_IntValue) isBidAgentResponse_AgentParams_ValueOneof() {}

func (*BidAgentResponse_AgentParams_DoubleValue) isBidAgentResponse_AgentParams_ValueOneof() {}

func (*BidAgentResponse_AgentParams_BoolValue) isBidAgentResponse_AgentParams_ValueOneof() {}

// Next Id: 4
// AgentData is a container for the AgentParams (defined above) and an
// identifier for the Agent.
// A use case for agent_id could be the release version of the Bid Agent.
type BidAgentResponse_AgentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId     *string                         `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AgentParams []*BidAgentResponse_AgentParams `protobuf:"bytes,2,rep,name=agent_params,json=agentParams" json:"agent_params,omitempty"`
	// By setting this field to true, the bidding agents can instruct Beeswax
	// to send the agent data to the exchange in the bid response. However,
	// the exchange must be willing to accept this data from the Bidding Agent.
	// Beeswax ensures that only the bidders that are whitelisted
	// by the exchange are able to utilize this feature.
	SendToExchange *bool `protobuf:"varint,3,opt,name=send_to_exchange,json=sendToExchange,def=0" json:"send_to_exchange,omitempty"`
}

// Default values for BidAgentResponse_AgentData fields.
const (
	Default_BidAgentResponse_AgentData_SendToExchange = bool(false)
)

func (x *BidAgentResponse_AgentData) Reset() {
	*x = BidAgentResponse_AgentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_bid_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAgentResponse_AgentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAgentResponse_AgentData) ProtoMessage() {}

func (x *BidAgentResponse_AgentData) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_bid_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAgentResponse_AgentData.ProtoReflect.Descriptor instead.
func (*BidAgentResponse_AgentData) Descriptor() ([]byte, []int) {
	return file_beeswax_bid_request_proto_rawDescGZIP(), []int{1, 1}
}

func (x *BidAgentResponse_AgentData) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *BidAgentResponse_AgentData) GetAgentParams() []*BidAgentResponse_AgentParams {
	if x != nil {
		return x.AgentParams
	}
	return nil
}

func (x *BidAgentResponse_AgentData) GetSendToExchange() bool {
	if x != nil && x.SendToExchange != nil {
		return *x.SendToExchange
	}
	return Default_BidAgentResponse_AgentData_SendToExchange
}

// Next Id: 5
// Creative represents the creative to be rendered in the openrtb bid
// response.
type BidAgentResponse_Creative struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the chosen creative. If the creative or the creative id are not provided,
	// Stinger will choose the creative based on the creative weighting method selected for
	// the line item (ie either randomly or in a weighted manner). If it is provided, it
	// should be one of the ids in Adcandidate.creative_ids where the Adcandidate's
	// line_item_id == Bid.line_item_id for the Bid containing this Creative message,
	// otherwise the bid will not be processed.
	Id *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Pixels that will be fired when the creative is served in addition
	// to the `pixels` field, which is set in `creative` object from buzz.
	// (see http://docs.beeswax.com/docs/creative)
	// This field should not be populated when the battr field has
	// AD_SUPPORTS_DYNAMIC_PIXELS(108), otherwise this bid will not be
	// processed.
	// battr field is under BidAgentRequest.bid_request.imp.(banner/video).battr
	// ; whether it is banner or video corresponds to the type of this creative.
	Pixels []string `protobuf:"bytes,2,rep,name=pixels" json:"pixels,omitempty"`
	// The `creative` object's `click_url` field, which is set from buzz,
	// will be replaced with this value if it is present.
	// (see http://docs.beeswax.com/docs/creative)
	// This field should not be populated when the battr field has
	// AD_SUPPORTS_DYNAMIC_CLICK_URL(109), otherwise this bid will not be
	// processed.
	// battr field is under BidAgentRequest.bid_request.imp.(banner/video).battr
	// ; whether it is banner or video corresponds to the type of this creative.
	ClickUrlOverride *string                            `protobuf:"bytes,3,opt,name=click_url_override,json=clickUrlOverride" json:"click_url_override,omitempty"`
	DynamicMacros    []*BidAgentResponse_Creative_Macro `protobuf:"bytes,4,rep,name=dynamic_macros,json=dynamicMacros" json:"dynamic_macros,omitempty"`
}

func (x *BidAgentResponse_Creative) Reset() {
	*x = BidAgentResponse_Creative{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_bid_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAgentResponse_Creative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAgentResponse_Creative) ProtoMessage() {}

func (x *BidAgentResponse_Creative) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_bid_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAgentResponse_Creative.ProtoReflect.Descriptor instead.
func (*BidAgentResponse_Creative) Descriptor() ([]byte, []int) {
	return file_beeswax_bid_request_proto_rawDescGZIP(), []int{1, 2}
}

func (x *BidAgentResponse_Creative) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BidAgentResponse_Creative) GetPixels() []string {
	if x != nil {
		return x.Pixels
	}
	return nil
}

func (x *BidAgentResponse_Creative) GetClickUrlOverride() string {
	if x != nil && x.ClickUrlOverride != nil {
		return *x.ClickUrlOverride
	}
	return ""
}

func (x *BidAgentResponse_Creative) GetDynamicMacros() []*BidAgentResponse_Creative_Macro {
	if x != nil {
		return x.DynamicMacros
	}
	return nil
}

// Bid agent needs to select a set of Adcandidates from the request
// and for each Adcandidate, submit a bid containing the following
// information.
// Next Tag: 8
type BidAgentResponse_Bid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LineItemId *uint64 `protobuf:"varint,1,opt,name=line_item_id,json=lineItemId" json:"line_item_id,omitempty"`
	// Deprecated, use bid_price_micros instead.
	// (1) Beeswax will do validation (see (2)) and use this value only if
	// bid_price_micros is not populated.
	// (2) Validation: The adcandidate with this line_item_id in the
	// BidAgentRequest must have bidding.currency set to USD;
	// otherwise this bid will be dropped.
	//
	// Deprecated: Do not use.
	BidPriceMicrosUsd *uint64 `protobuf:"varint,2,opt,name=bid_price_micros_usd,json=bidPriceMicrosUsd,def=0" json:"bid_price_micros_usd,omitempty"`
	// Value should be the price of a single impression. Ex: 12$ CPM = 0.012$ => bid_price_micros = 12000
	BidPriceMicros *uint64 `protobuf:"varint,6,opt,name=bid_price_micros,json=bidPriceMicros,def=0" json:"bid_price_micros,omitempty"`
	// Deprecated: Do not use.
	CreativeId *uint64                     `protobuf:"varint,3,opt,name=creative_id,json=creativeId" json:"creative_id,omitempty"`
	Creative   *BidAgentResponse_Creative  `protobuf:"bytes,5,opt,name=creative" json:"creative,omitempty"`
	AgentData  *BidAgentResponse_AgentData `protobuf:"bytes,4,opt,name=agent_data,json=agentData" json:"agent_data,omitempty"`
	// This field will be populated by bidding agent iff the line item is enabled for ghost bidding.
	GhostBidding *adgroup.GhostBidding `protobuf:"bytes,7,opt,name=ghost_bidding,json=ghostBidding" json:"ghost_bidding,omitempty"`
}

// Default values for BidAgentResponse_Bid fields.
const (
	Default_BidAgentResponse_Bid_BidPriceMicrosUsd = uint64(0)
	Default_BidAgentResponse_Bid_BidPriceMicros    = uint64(0)
)

func (x *BidAgentResponse_Bid) Reset() {
	*x = BidAgentResponse_Bid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_bid_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAgentResponse_Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAgentResponse_Bid) ProtoMessage() {}

func (x *BidAgentResponse_Bid) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_bid_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAgentResponse_Bid.ProtoReflect.Descriptor instead.
func (*BidAgentResponse_Bid) Descriptor() ([]byte, []int) {
	return file_beeswax_bid_request_proto_rawDescGZIP(), []int{1, 3}
}

func (x *BidAgentResponse_Bid) GetLineItemId() uint64 {
	if x != nil && x.LineItemId != nil {
		return *x.LineItemId
	}
	return 0
}

// Deprecated: Do not use.
func (x *BidAgentResponse_Bid) GetBidPriceMicrosUsd() uint64 {
	if x != nil && x.BidPriceMicrosUsd != nil {
		return *x.BidPriceMicrosUsd
	}
	return Default_BidAgentResponse_Bid_BidPriceMicrosUsd
}

func (x *BidAgentResponse_Bid) GetBidPriceMicros() uint64 {
	if x != nil && x.BidPriceMicros != nil {
		return *x.BidPriceMicros
	}
	return Default_BidAgentResponse_Bid_BidPriceMicros
}

// Deprecated: Do not use.
func (x *BidAgentResponse_Bid) GetCreativeId() uint64 {
	if x != nil && x.CreativeId != nil {
		return *x.CreativeId
	}
	return 0
}

func (x *BidAgentResponse_Bid) GetCreative() *BidAgentResponse_Creative {
	if x != nil {
		return x.Creative
	}
	return nil
}

func (x *BidAgentResponse_Bid) GetAgentData() *BidAgentResponse_AgentData {
	if x != nil {
		return x.AgentData
	}
	return nil
}

func (x *BidAgentResponse_Bid) GetGhostBidding() *adgroup.GhostBidding {
	if x != nil {
		return x.GhostBidding
	}
	return nil
}

// The creative's macros {{DYNAMIC:<name>:STRING}} in the value of a
// creative content or creative template, will be replaced with the
// content of `value`.
// For example, if name = "foo", value = "bar", the macro
// {{DYNAMIC:FOO:STRING}} will be replaced with "bar".
//
// Please note the following constraints:
// (1) Macro expansion will only apply to the creative of the same id as
// this containing creative object.
// (2) Macro name is case-insensitive. (if name = "foo",
// the macro {{DYNAMIC:FOO:STRING}} will still be replaced)
// (3) Beeswax will pick up the first 5 dynamic macros. Additional ones will
// be ignored.
// (4) For a macro to be expanded as an empty string, you should
// explicitly set the macro name in the `name` field, and leave the
// `value` feild empty; Dynamic macros in creatives that does
// not have a match from the `name` field here will not be expanded.
// (5) If a dynamic macro was not expanded, a string of {{DY:<name>}}
// (instead of {{DYNAMIC:<name>:STRING}}) will be placed at where the
// {{DYNAMIC:<name>:STRING}} macro was placed.
// (6) Values of dynamic macros cannot contain other Beeswax macros,
// (including other dynamic macros), as the contained macros will
// not be expanded.
// (7) If the macro is part of a url, the value shold be url-safe
// (e.g, by escaping). Note that click_url is properly escaped as a whole,
// so if the macro is in click_url, its value does not need to
// have extra escaping; url-safe is enough.
//
type BidAgentResponse_Creative_Macro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *BidAgentResponse_Creative_Macro) Reset() {
	*x = BidAgentResponse_Creative_Macro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beeswax_bid_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAgentResponse_Creative_Macro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAgentResponse_Creative_Macro) ProtoMessage() {}

func (x *BidAgentResponse_Creative_Macro) ProtoReflect() protoreflect.Message {
	mi := &file_beeswax_bid_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAgentResponse_Creative_Macro.ProtoReflect.Descriptor instead.
func (*BidAgentResponse_Creative_Macro) Descriptor() ([]byte, []int) {
	return file_beeswax_bid_request_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *BidAgentResponse_Creative_Macro) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BidAgentResponse_Creative_Macro) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

var File_beeswax_bid_request_proto protoreflect.FileDescriptor

var file_beeswax_bid_request_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2f, 0x62, 0x69, 0x64, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x62, 0x69, 0x64,
	0x1a, 0x1d, 0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2f, 0x62, 0x69, 0x64, 0x2f, 0x61, 0x64,
	0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x72, 0x74, 0x62,
	0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x72, 0x74, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23,
	0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2f, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f,
	0x67, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x0f, 0x42, 0x69, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x62, 0x69, 0x64, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x72, 0x74, 0x62, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x62, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0c,
	0x61, 0x64, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x64, 0x2e, 0x41, 0x64, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x64, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x22, 0xeb, 0x07, 0x0a, 0x10, 0x42, 0x69, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x64, 0x2e, 0x42, 0x69, 0x64, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x69, 0x64,
	0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x1a, 0xb8, 0x01, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a,
	0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x1a, 0x9d, 0x01, 0x0a, 0x09, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x64, 0x2e, 0x42, 0x69, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x2f, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x1a, 0xe0, 0x01, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f,
	0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x64, 0x2e, 0x42, 0x69, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x61, 0x63,
	0x72, 0x6f, 0x52, 0x0d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x73, 0x1a, 0x31, 0x0a, 0x05, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0xe9, 0x02, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x14, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x11, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x55, 0x73, 0x64, 0x12, 0x2b, 0x0a, 0x10, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x0e, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x12, 0x23, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x64,
	0x2e, 0x42, 0x69, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x64, 0x2e, 0x42,
	0x69, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x62, 0x69,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x42, 0x69, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x0c, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x48, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2e,
	0x62, 0x69, 0x64, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x6f, 0x74, 0x69, 0x76, 0x65, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x2f, 0x62, 0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x62,
	0x65, 0x65, 0x73, 0x77, 0x61, 0x78, 0x2f, 0x62, 0x69, 0x64,
}

var (
	file_beeswax_bid_request_proto_rawDescOnce sync.Once
	file_beeswax_bid_request_proto_rawDescData = file_beeswax_bid_request_proto_rawDesc
)

func file_beeswax_bid_request_proto_rawDescGZIP() []byte {
	file_beeswax_bid_request_proto_rawDescOnce.Do(func() {
		file_beeswax_bid_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_beeswax_bid_request_proto_rawDescData)
	})
	return file_beeswax_bid_request_proto_rawDescData
}

var file_beeswax_bid_request_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_beeswax_bid_request_proto_goTypes = []interface{}{
	(*BidAgentRequest)(nil),                 // 0: bid.BidAgentRequest
	(*BidAgentResponse)(nil),                // 1: bid.BidAgentResponse
	(*BidAgentResponse_AgentParams)(nil),    // 2: bid.BidAgentResponse.AgentParams
	(*BidAgentResponse_AgentData)(nil),      // 3: bid.BidAgentResponse.AgentData
	(*BidAgentResponse_Creative)(nil),       // 4: bid.BidAgentResponse.Creative
	(*BidAgentResponse_Bid)(nil),            // 5: bid.BidAgentResponse.Bid
	(*BidAgentResponse_Creative_Macro)(nil), // 6: bid.BidAgentResponse.Creative.Macro
	(*openrtb.BidRequest)(nil),              // 7: openrtb.BidRequest
	(*Adcandidate)(nil),                     // 8: bid.Adcandidate
	(*adgroup.GhostBidding)(nil),            // 9: adgroup.GhostBidding
}
var file_beeswax_bid_request_proto_depIdxs = []int32{
	7, // 0: bid.BidAgentRequest.bid_request:type_name -> openrtb.BidRequest
	8, // 1: bid.BidAgentRequest.adcandidates:type_name -> bid.Adcandidate
	5, // 2: bid.BidAgentResponse.bids:type_name -> bid.BidAgentResponse.Bid
	2, // 3: bid.BidAgentResponse.AgentData.agent_params:type_name -> bid.BidAgentResponse.AgentParams
	6, // 4: bid.BidAgentResponse.Creative.dynamic_macros:type_name -> bid.BidAgentResponse.Creative.Macro
	4, // 5: bid.BidAgentResponse.Bid.creative:type_name -> bid.BidAgentResponse.Creative
	3, // 6: bid.BidAgentResponse.Bid.agent_data:type_name -> bid.BidAgentResponse.AgentData
	9, // 7: bid.BidAgentResponse.Bid.ghost_bidding:type_name -> adgroup.GhostBidding
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_beeswax_bid_request_proto_init() }
func file_beeswax_bid_request_proto_init() {
	if File_beeswax_bid_request_proto != nil {
		return
	}
	file_beeswax_bid_adcandidate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_beeswax_bid_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_bid_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_bid_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAgentResponse_AgentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_bid_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAgentResponse_AgentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_bid_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAgentResponse_Creative); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_bid_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAgentResponse_Bid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beeswax_bid_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAgentResponse_Creative_Macro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_beeswax_bid_request_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BidAgentResponse_AgentParams_StringValue)(nil),
		(*BidAgentResponse_AgentParams_IntValue)(nil),
		(*BidAgentResponse_AgentParams_DoubleValue)(nil),
		(*BidAgentResponse_AgentParams_BoolValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beeswax_bid_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beeswax_bid_request_proto_goTypes,
		DependencyIndexes: file_beeswax_bid_request_proto_depIdxs,
		MessageInfos:      file_beeswax_bid_request_proto_msgTypes,
	}.Build()
	File_beeswax_bid_request_proto = out.File
	file_beeswax_bid_request_proto_rawDesc = nil
	file_beeswax_bid_request_proto_goTypes = nil
	file_beeswax_bid_request_proto_depIdxs = nil
}
